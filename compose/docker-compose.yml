version: '3.8'
services:
#  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
#    image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
#    container_name: opensearch-node1
#    environment:
#        - cluster.name=opensearch-cluster # Name the cluster
#        - node.name=opensearch-node1 # Name the node that will run in this container
#        - discovery.seed_hosts=opensearch-node1 #,opensearch-node2 # Nodes to look for when discovering the cluster
#        - cluster.initial_cluster_manager_nodes=opensearch-node1 #,opensearch-node2 # Nodes eligible to serve as cluster manager
#        - bootstrap.memory_lock=true # Disable JVM heap memory swapping
#        - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
#        - OPENSEARCH_INITIAL_ADMIN_PASSWORD=Ecommerce@2025 # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
#    ulimits:
#      memlock:
#        soft: -1 # Set memlock to unlimited (no soft or hard limit)
#        hard: -1
#      nofile:
#        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
#        hard: 65536
#    volumes:
#      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
#    ports:
#      - 9200:9200 # REST API
#      - 9600:9600 # Performance Analyzer
#    networks:
#      - ecommerce-network # All of the containers will join the same Docker bridge network

#  opensearch-dashboards:
#    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
#    container_name: opensearch-dashboards
#    ports:
#      - 5601:5601 # Map host port 5601 to container port 5601
#    expose:
#      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
#    environment:
#      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200"]' # ,"https://opensearch-node2:9200" # Define the OpenSearch nodes that OpenSearch Dashboards will query
#    networks:
#      - ecommerce-network
#    depends_on:
#      - opensearch-node1
  mysqlsrv:
    image: mysql:8.0
    environment:
        MYSQL_ROOT_PASSWORD: "Tr3x2@25"
        #MYSQL_DATABASE: "ecommerce-produtos"
    ports:
      - "3306:3306"
    volumes:
      - ./docker/setup.sql:/docker-entrypoint-initdb.d/setup.sql
      - /home/dell/data/docker/mysql:/var/lib/mysql
    networks:
      - ecommerce-network

# keycloak:
#   image: quay.io/keycloak/keycloak:24.0
#   container_name: keycloak-ecommerce
#   environment:
#     KC_HOSTNAME: localhost
#     KC_HOSTNAME_PORT: 7080
#     KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
#     KEYCLOAK_ADMIN: admin
#     KEYCLOAK_ADMIN_PASSWORD: admin
#     KC_HEALTH_ENABLED: "true"
#     KC_LOG_LEVEL: info
#     KC_DB: mysql
#     KC_DB_USERNAME: root
#     KC_DB_PASSWORD: MySql2019!
#     KC_DB_URL_HOST: mysqlsrv
#     KC_DB_URL_PORT: 3306
#     KC_DB_SCHEMA: keycloak
#   healthcheck:
#     test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
#     interval: 15s
#     timeout: 2s
#     retries: 15
#   command: ["start-dev", "--http-port", "7080", "--https-port", "7443"]
#   ports:
#     - "7080:7080"
#     - "7443:7443"
#   networks:
#     - ecommerce-network
#   depends_on: 
#     - mysqlsrv

volumes:
  opensearch-data1:

networks: 
  ecommerce-network:
    driver: bridge  